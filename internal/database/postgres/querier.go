// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CanAccessFile(ctx context.Context, arg CanAccessFileParams) (bool, error)
	CanAccessFolder(ctx context.Context, arg CanAccessFolderParams) (bool, error)
	CheckFileOwnership(ctx context.Context, arg CheckFileOwnershipParams) (bool, error)
	CheckFolderOwnership(ctx context.Context, arg CheckFolderOwnershipParams) (bool, error)
	CheckUserOwnsShare(ctx context.Context, arg CheckUserOwnsShareParams) (bool, error)
	CreateFileReference(ctx context.Context, arg CreateFileReferenceParams) (File, error)
	CreateFolder(ctx context.Context, arg CreateFolderParams) (Folder, error)
	CreatePhysicalFile(ctx context.Context, arg CreatePhysicalFileParams) (PhysicalFile, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DecrementPhysicalFileReferenceCount(ctx context.Context, id pgtype.UUID) error
	DecrementPhysicalFileRefsInFolder(ctx context.Context, id pgtype.UUID) error
	DeleteFileReference(ctx context.Context, id pgtype.UUID) error
	DeleteFilesInFolder(ctx context.Context, id pgtype.UUID) error
	DeleteFolder(ctx context.Context, arg DeleteFolderParams) error
	DeleteFoldersRecursively(ctx context.Context, id pgtype.UUID) error
	GetFileById(ctx context.Context, id pgtype.UUID) (GetFileByIdRow, error)
	GetFileByIdAndOwner(ctx context.Context, arg GetFileByIdAndOwnerParams) (File, error)
	GetFileForDeletion(ctx context.Context, id pgtype.UUID) (GetFileForDeletionRow, error)
	GetFileForDownload(ctx context.Context, id pgtype.UUID) (GetFileForDownloadRow, error)
	GetFileShares(ctx context.Context, arg GetFileSharesParams) ([]Share, error)
	GetFolderByID(ctx context.Context, id pgtype.UUID) (Folder, error)
	GetFolderIdByPublicToken(ctx context.Context, publicToken pgtype.Text) (pgtype.UUID, error)
	GetFolderPath(ctx context.Context, arg GetFolderPathParams) (GetFolderPathRow, error)
	GetFolderShares(ctx context.Context, arg GetFolderSharesParams) ([]Share, error)
	GetMyShares(ctx context.Context, ownerID pgtype.UUID) ([]Share, error)
	GetPhysicalFileByHash(ctx context.Context, contentHash string) (PhysicalFile, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id pgtype.UUID) (User, error)
	ListFilesByFolder(ctx context.Context, folderID pgtype.UUID) ([]ListFilesByFolderRow, error)
	ListFilesByFolderWithSortAndFilter(ctx context.Context, arg ListFilesByFolderWithSortAndFilterParams) ([]ListFilesByFolderWithSortAndFilterRow, error)
	ListRootFilesByOwner(ctx context.Context, ownerID pgtype.UUID) ([]ListRootFilesByOwnerRow, error)
	ListRootFilesByOwnerWithSortAndFilter(ctx context.Context, arg ListRootFilesByOwnerWithSortAndFilterParams) ([]ListRootFilesByOwnerWithSortAndFilterRow, error)
	ListRootFoldersByOwner(ctx context.Context, ownerID pgtype.UUID) ([]Folder, error)
	ListRootFoldersByOwnerWithSortAndFilter(ctx context.Context, arg ListRootFoldersByOwnerWithSortAndFilterParams) ([]ListRootFoldersByOwnerWithSortAndFilterRow, error)
	ListSubfoldersByParent(ctx context.Context, parentID pgtype.UUID) ([]Folder, error)
	ListSubfoldersByParentWithSortAndFilter(ctx context.Context, arg ListSubfoldersByParentWithSortAndFilterParams) ([]ListSubfoldersByParentWithSortAndFilterRow, error)
	RevokePublicShare(ctx context.Context, arg RevokePublicShareParams) error
	RevokeUserShare(ctx context.Context, arg RevokeUserShareParams) error
	SearchAllFilesByOwner(ctx context.Context, arg SearchAllFilesByOwnerParams) ([]SearchAllFilesByOwnerRow, error)
	ShareFilePublicly(ctx context.Context, arg ShareFilePubliclyParams) error
	ShareFileWithUser(ctx context.Context, arg ShareFileWithUserParams) error
	ShareFolderPublicly(ctx context.Context, arg ShareFolderPubliclyParams) error
	ShareFolderWithUser(ctx context.Context, arg ShareFolderWithUserParams) error
}

var _ Querier = (*Queries)(nil)
