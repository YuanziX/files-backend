type AdminFile {
  id: ID!
  ownerID: ID!
  filename: String!
  mimeType: String!
  size: Int!
  uploadDate: Time!
  downloadCount: Int!
}

type Pagination {
  count: Int!
  totalCount: Int!
  pageNo: Int!
  totalPages: Int!
  limit: Int!
}

type GetFilesResponse {
  files: [AdminFile!]!
  pagination: Pagination!
}

type GetUsersResponse {
  users: [User!]!
  pagination: Pagination!
}

type DownloadFileResponse {
  url: String!
  filename: String!
}

type UsageStat {
  totalStorageUsed: Int!
  actualStorageUsed: Int!
}

extend type Mutation {
  createAdminUser(email: String!, password: String!): String!
}

extend type Query {
  getFiles(search: String, limit: Int, pageNo: Int): GetFilesResponse!
    @hasRole(role: "admin")
  downloadFile(fileID: ID!): DownloadFileResponse! @hasRole(role: "admin")

  getUsers(limit: Int, pageNo: Int): GetUsersResponse! @hasRole(role: "admin")
  getUserByID(userID: ID!): User! @hasRole(role: "admin")
  getUsageStatsByUser(userID: ID!): UsageStat! @hasRole(role: "admin")
}
